version: '3.1'

services:
  postgresql-master:
    container_name: postgresql-master
    image: docker.io/bitnami/postgresql:14
    restart: always
    volumes:
      - postgres-data:/var/lib/postgresql/data
    ports:
      - "5435:5432"
    environment:
      POSTGRESQL_REPLICATION_MODE: master
      POSTGRESQL_REPLICATION_USER: repl_user
      POSTGRESQL_REPLICATION_PASSWORD: repl_password
      POSTGRES_USER: test
      POSTGRES_PASSWORD: test
      POSTGRES_DB: promise_t

  postgresql-slave:
    container_name: postgresql-slave
    image: docker.io/bitnami/postgresql:14
    ports:
      - "5436:5432"
    depends_on:
      - postgresql-master
    environment:
      POSTGRESQL_REPLICATION_MODE: slave
      POSTGRESQL_REPLICATION_USER: repl_user
      POSTGRESQL_REPLICATION_PASSWORD: repl_password
      POSTGRESQL_MASTER_HOST: postgresql-master
      POSTGRESQL_PASSWORD: test
      POSTGRESQL_MASTER_PORT_NUMBER: 5432
      ALLOW_EMPTY_PASSWORD: yes

  redis:
    container_name: promise-t-redis
    image: redis:6
    ports:
      - "6379:6379"

  zookeeper:
    image: wurstmeister/zookeeper
    container_name: lezhin-zookeeper
    ports:
      - "2181:2181"
    restart: always

  kafka:
    image: wurstmeister/kafka:2.13-2.8.1
    container_name: lezhin-kafka
    ports:
      - "9092:9092"
    environment:
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092
      KAFKA_BROKER_ID: 1
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: 'true'
    depends_on:
      - zookeeper
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    restart: always

volumes:
  postgres-data:
    driver: local